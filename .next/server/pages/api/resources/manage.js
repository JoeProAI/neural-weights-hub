"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/resources/manage";
exports.ids = ["pages/api/resources/manage"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "firebase-admin/app":
/*!*************************************!*\
  !*** external "firebase-admin/app" ***!
  \*************************************/
/***/ ((module) => {

module.exports = import("firebase-admin/app");;

/***/ }),

/***/ "firebase-admin/auth":
/*!**************************************!*\
  !*** external "firebase-admin/auth" ***!
  \**************************************/
/***/ ((module) => {

module.exports = import("firebase-admin/auth");;

/***/ }),

/***/ "firebase/app":
/*!*******************************!*\
  !*** external "firebase/app" ***!
  \*******************************/
/***/ ((module) => {

module.exports = import("firebase/app");;

/***/ }),

/***/ "firebase/auth":
/*!********************************!*\
  !*** external "firebase/auth" ***!
  \********************************/
/***/ ((module) => {

module.exports = import("firebase/auth");;

/***/ }),

/***/ "firebase/firestore":
/*!*************************************!*\
  !*** external "firebase/firestore" ***!
  \*************************************/
/***/ ((module) => {

module.exports = import("firebase/firestore");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fresources%2Fmanage&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cresources%5Cmanage.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fresources%2Fmanage&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cresources%5Cmanage.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_resources_manage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\resources\\manage.js */ \"(api)/./pages/api/resources/manage.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_resources_manage_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_resources_manage_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_resources_manage_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_resources_manage_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/resources/manage\",\n        pathname: \"/api/resources/manage\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_resources_manage_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnJlc291cmNlcyUyRm1hbmFnZSZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDcmVzb3VyY2VzJTVDbWFuYWdlLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQytEO0FBQy9EO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQywyREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsMkRBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV1cmFsLXdlaWdodHMtaHViLz9jZTg0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlc1xcXFxhcGlcXFxccmVzb3VyY2VzXFxcXG1hbmFnZS5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3Jlc291cmNlcy9tYW5hZ2VcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9yZXNvdXJjZXMvbWFuYWdlXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fresources%2Fmanage&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cresources%5Cmanage.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/auth.js":
/*!*********************!*\
  !*** ./lib/auth.js ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyFirebaseToken: () => (/* binding */ verifyFirebaseToken),\n/* harmony export */   verifyIdToken: () => (/* binding */ verifyIdToken)\n/* harmony export */ });\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./firebase */ \"(api)/./lib/firebase.js\");\n/* harmony import */ var firebase_admin_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase-admin/auth */ \"firebase-admin/auth\");\n/* harmony import */ var firebase_admin_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase-admin/app */ \"firebase-admin/app\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_firebase__WEBPACK_IMPORTED_MODULE_0__, firebase_admin_auth__WEBPACK_IMPORTED_MODULE_1__, firebase_admin_app__WEBPACK_IMPORTED_MODULE_2__]);\n([_firebase__WEBPACK_IMPORTED_MODULE_0__, firebase_admin_auth__WEBPACK_IMPORTED_MODULE_1__, firebase_admin_app__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n// Initialize Firebase Admin SDK\nif (!(0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_2__.getApps)().length) {\n    (0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_2__.initializeApp)({\n        credential: (0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_2__.cert)({\n            projectId: \"neural-weights-hub\",\n            clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n            privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\")\n        })\n    });\n}\nasync function verifyIdToken(token) {\n    try {\n        const decodedToken = await (0,firebase_admin_auth__WEBPACK_IMPORTED_MODULE_1__.getAuth)().verifyIdToken(token);\n        return decodedToken;\n    } catch (error) {\n        throw new Error(\"Invalid token\");\n    }\n}\nasync function verifyFirebaseToken(token) {\n    try {\n        const decodedToken = await (0,firebase_admin_auth__WEBPACK_IMPORTED_MODULE_1__.getAuth)().verifyIdToken(token);\n        return decodedToken;\n    } catch (error) {\n        throw new Error(\"Invalid token\");\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvYXV0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFrQztBQUNZO0FBQ29CO0FBRWxFLGdDQUFnQztBQUNoQyxJQUFJLENBQUNHLDJEQUFPQSxHQUFHRSxNQUFNLEVBQUU7SUFDckJILGlFQUFhQSxDQUFDO1FBQ1pJLFlBQVlGLHdEQUFJQSxDQUFDO1lBQ2ZHLFdBQVdDLG9CQUEyQztZQUN0REcsYUFBYUgsUUFBUUMsR0FBRyxDQUFDRyxxQkFBcUI7WUFDOUNDLFlBQVlMLFFBQVFDLEdBQUcsQ0FBQ0ssb0JBQW9CLEVBQUVDLFFBQVEsUUFBUTtRQUNoRTtJQUNGO0FBQ0Y7QUFFTyxlQUFlQyxjQUFjQyxLQUFLO0lBQ3ZDLElBQUk7UUFDRixNQUFNQyxlQUFlLE1BQU1qQiw0REFBT0EsR0FBR2UsYUFBYSxDQUFDQztRQUNuRCxPQUFPQztJQUNULEVBQUUsT0FBT0MsT0FBTztRQUNkLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtBQUNGO0FBRU8sZUFBZUMsb0JBQW9CSixLQUFLO0lBQzdDLElBQUk7UUFDRixNQUFNQyxlQUFlLE1BQU1qQiw0REFBT0EsR0FBR2UsYUFBYSxDQUFDQztRQUNuRCxPQUFPQztJQUNULEVBQUUsT0FBT0MsT0FBTztRQUNkLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV1cmFsLXdlaWdodHMtaHViLy4vbGliL2F1dGguanM/Mjg3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdXRoIH0gZnJvbSAnLi9maXJlYmFzZSc7XG5pbXBvcnQgeyBnZXRBdXRoIH0gZnJvbSAnZmlyZWJhc2UtYWRtaW4vYXV0aCc7XG5pbXBvcnQgeyBpbml0aWFsaXplQXBwLCBnZXRBcHBzLCBjZXJ0IH0gZnJvbSAnZmlyZWJhc2UtYWRtaW4vYXBwJztcblxuLy8gSW5pdGlhbGl6ZSBGaXJlYmFzZSBBZG1pbiBTREtcbmlmICghZ2V0QXBwcygpLmxlbmd0aCkge1xuICBpbml0aWFsaXplQXBwKHtcbiAgICBjcmVkZW50aWFsOiBjZXJ0KHtcbiAgICAgIHByb2plY3RJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfUFJPSkVDVF9JRCxcbiAgICAgIGNsaWVudEVtYWlsOiBwcm9jZXNzLmVudi5GSVJFQkFTRV9DTElFTlRfRU1BSUwsXG4gICAgICBwcml2YXRlS2V5OiBwcm9jZXNzLmVudi5GSVJFQkFTRV9QUklWQVRFX0tFWT8ucmVwbGFjZSgvXFxcXG4vZywgJ1xcbicpLFxuICAgIH0pLFxuICB9KTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHZlcmlmeUlkVG9rZW4odG9rZW4pIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBkZWNvZGVkVG9rZW4gPSBhd2FpdCBnZXRBdXRoKCkudmVyaWZ5SWRUb2tlbih0b2tlbik7XG4gICAgcmV0dXJuIGRlY29kZWRUb2tlbjtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgdG9rZW4nKTtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5RmlyZWJhc2VUb2tlbih0b2tlbikge1xuICB0cnkge1xuICAgIGNvbnN0IGRlY29kZWRUb2tlbiA9IGF3YWl0IGdldEF1dGgoKS52ZXJpZnlJZFRva2VuKHRva2VuKTtcbiAgICByZXR1cm4gZGVjb2RlZFRva2VuO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCB0b2tlbicpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiYXV0aCIsImdldEF1dGgiLCJpbml0aWFsaXplQXBwIiwiZ2V0QXBwcyIsImNlcnQiLCJsZW5ndGgiLCJjcmVkZW50aWFsIiwicHJvamVjdElkIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX1BST0pFQ1RfSUQiLCJjbGllbnRFbWFpbCIsIkZJUkVCQVNFX0NMSUVOVF9FTUFJTCIsInByaXZhdGVLZXkiLCJGSVJFQkFTRV9QUklWQVRFX0tFWSIsInJlcGxhY2UiLCJ2ZXJpZnlJZFRva2VuIiwidG9rZW4iLCJkZWNvZGVkVG9rZW4iLCJlcnJvciIsIkVycm9yIiwidmVyaWZ5RmlyZWJhc2VUb2tlbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/auth.js\n");

/***/ }),

/***/ "(api)/./lib/daytona.js":
/*!************************!*\
  !*** ./lib/daytona.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DaytonaService: () => (/* binding */ DaytonaService),\n/* harmony export */   daytonaService: () => (/* binding */ daytonaService)\n/* harmony export */ });\n// Real Daytona API Service - Leverage your $20k credits\nclass DaytonaService {\n    constructor(){\n        this.apiKey = \"dtn_f57cfc812c645fb32d9d46166085f220314be715fd96a8e625e0951172caf6cc\";\n        this.orgId = \"ae461f26-2a56-4b64-b882-32405be66ffd\";\n        this.baseUrl = \"https://api.daytona.io\";\n        // Pre-created volumes for models\n        this.volumes = {\n            \"gpt-20b\": process.env.DAYTONA_GPT_20B_VOLUME_ID || \"3d7e7067-1bc1-4094-aaff-9d165fe153e4\",\n            \"gpt-120b\": process.env.DAYTONA_GPT_120B_VOLUME_ID || \"612103f9-101c-4701-8a33-11f70ab58b1d\"\n        };\n    }\n    async createHeaders() {\n        return {\n            \"Authorization\": `Bearer ${this.apiKey}`,\n            \"X-Daytona-Organization-ID\": this.orgId,\n            \"Content-Type\": \"application/json\"\n        };\n    }\n    // Create user's personal sandbox with access to GPT models\n    async createUserSandbox(userId, plan) {\n        try {\n            const headers = await this.createHeaders();\n            // Determine resources based on plan\n            const resources = this.getResourcesForPlan(plan);\n            const response = await fetch(`${this.baseUrl}/sandboxes`, {\n                method: \"POST\",\n                headers,\n                body: JSON.stringify({\n                    name: `neural-weights-${userId.slice(0, 8)}`,\n                    template: \"python-ml\",\n                    autoStop: plan === \"free\" ? true : false,\n                    resources: resources,\n                    volumes: this.getVolumesForPlan(plan),\n                    environment: {\n                        \"NEURAL_WEIGHTS_USER_ID\": userId,\n                        \"NEURAL_WEIGHTS_PLAN\": plan,\n                        \"GPT_20B_ENDPOINT\": \"https://joe-9--neural-weights-hub-gpt-20b-inference.modal.run\",\n                        \"GPT_120B_ENDPOINT\": \"https://joe-9--neural-weights-hub-gpt-120b-inference.modal.run\"\n                    }\n                })\n            });\n            if (!response.ok) {\n                const error = await response.text();\n                throw new Error(`Failed to create sandbox: ${response.status} ${error}`);\n            }\n            const sandbox = await response.json();\n            return sandbox;\n        } catch (error) {\n            console.error(\"Error creating user sandbox:\", error);\n            throw error;\n        }\n    }\n    // Get resources based on subscription plan (Daytona limits: max 4 CPU, 8GB RAM, 10GB disk)\n    getResourcesForPlan(plan) {\n        const planResources = {\n            \"free\": {\n                cpu: 1,\n                memory: 1,\n                disk: 10\n            },\n            \"pro\": {\n                cpu: 2,\n                memory: 4,\n                disk: 10\n            },\n            \"team\": {\n                cpu: 4,\n                memory: 8,\n                disk: 10\n            },\n            \"enterprise\": {\n                cpu: 4,\n                memory: 8,\n                disk: 10\n            } // Same as team (Daytona max)\n        };\n        return planResources[plan] || planResources[\"free\"];\n    }\n    // Get volume access based on plan\n    getVolumesForPlan(plan) {\n        const volumes = [];\n        // All plans get access to GPT-20B\n        volumes.push({\n            volumeId: this.volumes[\"gpt-20b\"],\n            mountPath: \"/models/gpt-20b\",\n            readOnly: true\n        });\n        // Pro+ plans get access to GPT-120B\n        if ([\n            \"pro\",\n            \"team\",\n            \"enterprise\"\n        ].includes(plan)) {\n            volumes.push({\n                volumeId: this.volumes[\"gpt-120b\"],\n                mountPath: \"/models/gpt-120b\",\n                readOnly: true\n            });\n        }\n        return volumes;\n    }\n    // Get user's sandbox status\n    async getSandboxStatus(sandboxId) {\n        try {\n            const headers = await this.createHeaders();\n            const response = await fetch(`${this.baseUrl}/sandboxes/${sandboxId}`, {\n                method: \"GET\",\n                headers\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to get sandbox status: ${response.status}`);\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Error getting sandbox status:\", error);\n            throw error;\n        }\n    }\n    // Start user's sandbox\n    async startSandbox(sandboxId) {\n        try {\n            const headers = await this.createHeaders();\n            const response = await fetch(`${this.baseUrl}/sandboxes/${sandboxId}/start`, {\n                method: \"POST\",\n                headers\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to start sandbox: ${response.status}`);\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Error starting sandbox:\", error);\n            throw error;\n        }\n    }\n    // Stop user's sandbox (for free tier auto-stop)\n    async stopSandbox(sandboxId) {\n        try {\n            const headers = await this.createHeaders();\n            const response = await fetch(`${this.baseUrl}/sandboxes/${sandboxId}/stop`, {\n                method: \"POST\",\n                headers\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to stop sandbox: ${response.status}`);\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Error stopping sandbox:\", error);\n            throw error;\n        }\n    }\n    // Delete user's sandbox\n    async deleteSandbox(sandboxId) {\n        try {\n            const headers = await this.createHeaders();\n            const response = await fetch(`${this.baseUrl}/sandboxes/${sandboxId}`, {\n                method: \"DELETE\",\n                headers\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to delete sandbox: ${response.status}`);\n            }\n            return true;\n        } catch (error) {\n            console.error(\"Error deleting sandbox:\", error);\n            throw error;\n        }\n    }\n    // Get sandbox connection info (SSH, VS Code, etc.)\n    async getSandboxConnection(sandboxId) {\n        try {\n            const headers = await this.createHeaders();\n            const response = await fetch(`${this.baseUrl}/sandboxes/${sandboxId}/connection`, {\n                method: \"GET\",\n                headers\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to get connection info: ${response.status}`);\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Error getting connection info:\", error);\n            throw error;\n        }\n    }\n    // List user's sandboxes\n    async listUserSandboxes(userId) {\n        try {\n            const headers = await this.createHeaders();\n            const response = await fetch(`${this.baseUrl}/sandboxes?filter=neural-weights-${userId.slice(0, 8)}`, {\n                method: \"GET\",\n                headers\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to list sandboxes: ${response.status}`);\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Error listing sandboxes:\", error);\n            throw error;\n        }\n    }\n    // Create snapshot of user's work\n    async createSnapshot(sandboxId, snapshotName, description) {\n        try {\n            const headers = await this.createHeaders();\n            const response = await fetch(`${this.baseUrl}/snapshots`, {\n                method: \"POST\",\n                headers,\n                body: JSON.stringify({\n                    name: snapshotName,\n                    sandboxId: sandboxId,\n                    description: description\n                })\n            });\n            if (!response.ok) {\n                const error = await response.text();\n                throw new Error(`Failed to create snapshot: ${response.status} ${error}`);\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Error creating snapshot:\", error);\n            throw error;\n        }\n    }\n    // Get usage statistics for billing\n    async getSandboxUsage(sandboxId, startDate, endDate) {\n        try {\n            const headers = await this.createHeaders();\n            const response = await fetch(`${this.baseUrl}/sandboxes/${sandboxId}/usage?start=${startDate}&end=${endDate}`, {\n                method: \"GET\",\n                headers\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to get usage: ${response.status}`);\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Error getting usage:\", error);\n            throw error;\n        }\n    }\n}\nconst daytonaService = new DaytonaService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/daytona.js\n");

/***/ }),

/***/ "(api)/./lib/firebase.js":
/*!*************************!*\
  !*** ./lib/firebase.js ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"firebase/app\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/auth */ \"firebase/auth\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([firebase_app__WEBPACK_IMPORTED_MODULE_0__, firebase_auth__WEBPACK_IMPORTED_MODULE_1__, firebase_firestore__WEBPACK_IMPORTED_MODULE_2__]);\n([firebase_app__WEBPACK_IMPORTED_MODULE_0__, firebase_auth__WEBPACK_IMPORTED_MODULE_1__, firebase_firestore__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDGE-oH_WJnNcdUyBKkPrzQAEZNJ3ShQU8\",\n    authDomain: \"neural-weights-hub.firebaseapp.com\",\n    projectId: \"neural-weights-hub\",\n    storageBucket: \"neural-weights-hub.firebasestorage.app\",\n    messagingSenderId: \"449347999390\",\n    appId: \"1:449347999390:web:312348135fb55b3a138d8f\"\n};\n// Only initialize Firebase if we have valid configuration and no existing app\nlet app = null;\nlet auth = null;\nlet db = null;\ntry {\n    if (firebaseConfig.apiKey && firebaseConfig.projectId) {\n        // Check if Firebase app already exists\n        const existingApps = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)();\n        if (existingApps.length === 0) {\n            app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig);\n        } else {\n            app = existingApps[0];\n        }\n        auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.getAuth)(app);\n        // Initialize Firestore with error handling\n        try {\n            db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getFirestore)(app);\n        } catch (firestoreError) {\n            console.warn(\"Firestore initialization failed:\", firestoreError.message);\n            db = null;\n        }\n    } else {\n        console.warn(\"Firebase configuration incomplete - running in demo mode\");\n    }\n} catch (error) {\n    console.warn(\"Firebase initialization failed:\", error.message);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (app);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvZmlyZWJhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQXNEO0FBQ087QUFDZTtBQUU1RSxNQUFNTSxpQkFBaUI7SUFDckJDLFFBQVFDLHlDQUF3QztJQUNoREcsWUFBWUgsb0NBQTRDO0lBQ3hESyxXQUFXTCxvQkFBMkM7SUFDdERPLGVBQWVQLHdDQUErQztJQUM5RFMsbUJBQW1CVCxjQUFvRDtJQUN2RVcsT0FBT1gsMkNBQXVDO0FBQ2hEO0FBRUEsOEVBQThFO0FBQzlFLElBQUlhLE1BQU07QUFDVixJQUFJQyxPQUFPO0FBQ1gsSUFBSUMsS0FBSztBQUVULElBQUk7SUFDRixJQUFJakIsZUFBZUMsTUFBTSxJQUFJRCxlQUFlTyxTQUFTLEVBQUU7UUFDckQsdUNBQXVDO1FBQ3ZDLE1BQU1XLGVBQWV2QixxREFBT0E7UUFDNUIsSUFBSXVCLGFBQWFDLE1BQU0sS0FBSyxHQUFHO1lBQzdCSixNQUFNckIsMkRBQWFBLENBQUNNO1FBQ3RCLE9BQU87WUFDTGUsTUFBTUcsWUFBWSxDQUFDLEVBQUU7UUFDdkI7UUFFQUYsT0FBT3BCLHNEQUFPQSxDQUFDbUI7UUFFZiwyQ0FBMkM7UUFDM0MsSUFBSTtZQUNGRSxLQUFLbkIsZ0VBQVlBLENBQUNpQjtRQUNwQixFQUFFLE9BQU9LLGdCQUFnQjtZQUN2QkMsUUFBUUMsSUFBSSxDQUFDLG9DQUFvQ0YsZUFBZUcsT0FBTztZQUN2RU4sS0FBSztRQUNQO0lBQ0YsT0FBTztRQUNMSSxRQUFRQyxJQUFJLENBQUM7SUFDZjtBQUNGLEVBQUUsT0FBT0UsT0FBTztJQUNkSCxRQUFRQyxJQUFJLENBQUMsbUNBQW1DRSxNQUFNRCxPQUFPO0FBQy9EO0FBRW9CO0FBQ3BCLGlFQUFlUixHQUFHQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV1cmFsLXdlaWdodHMtaHViLy4vbGliL2ZpcmViYXNlLmpzP2FiNDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5pdGlhbGl6ZUFwcCwgZ2V0QXBwcyB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XG5pbXBvcnQgeyBnZXRBdXRoLCBjb25uZWN0QXV0aEVtdWxhdG9yIH0gZnJvbSAnZmlyZWJhc2UvYXV0aCc7XG5pbXBvcnQgeyBnZXRGaXJlc3RvcmUsIGNvbm5lY3RGaXJlc3RvcmVFbXVsYXRvciB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XG5cbmNvbnN0IGZpcmViYXNlQ29uZmlnID0ge1xuICBhcGlLZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVksXG4gIGF1dGhEb21haW46IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FVVEhfRE9NQUlOLFxuICBwcm9qZWN0SWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX1BST0pFQ1RfSUQsXG4gIHN0b3JhZ2VCdWNrZXQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX1NUT1JBR0VfQlVDS0VULFxuICBtZXNzYWdpbmdTZW5kZXJJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfTUVTU0FHSU5HX1NFTkRFUl9JRCxcbiAgYXBwSWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQUF9JRFxufTtcblxuLy8gT25seSBpbml0aWFsaXplIEZpcmViYXNlIGlmIHdlIGhhdmUgdmFsaWQgY29uZmlndXJhdGlvbiBhbmQgbm8gZXhpc3RpbmcgYXBwXG5sZXQgYXBwID0gbnVsbDtcbmxldCBhdXRoID0gbnVsbDtcbmxldCBkYiA9IG51bGw7XG5cbnRyeSB7XG4gIGlmIChmaXJlYmFzZUNvbmZpZy5hcGlLZXkgJiYgZmlyZWJhc2VDb25maWcucHJvamVjdElkKSB7XG4gICAgLy8gQ2hlY2sgaWYgRmlyZWJhc2UgYXBwIGFscmVhZHkgZXhpc3RzXG4gICAgY29uc3QgZXhpc3RpbmdBcHBzID0gZ2V0QXBwcygpO1xuICAgIGlmIChleGlzdGluZ0FwcHMubGVuZ3RoID09PSAwKSB7XG4gICAgICBhcHAgPSBpbml0aWFsaXplQXBwKGZpcmViYXNlQ29uZmlnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBwID0gZXhpc3RpbmdBcHBzWzBdO1xuICAgIH1cbiAgICBcbiAgICBhdXRoID0gZ2V0QXV0aChhcHApO1xuICAgIFxuICAgIC8vIEluaXRpYWxpemUgRmlyZXN0b3JlIHdpdGggZXJyb3IgaGFuZGxpbmdcbiAgICB0cnkge1xuICAgICAgZGIgPSBnZXRGaXJlc3RvcmUoYXBwKTtcbiAgICB9IGNhdGNoIChmaXJlc3RvcmVFcnJvcikge1xuICAgICAgY29uc29sZS53YXJuKCdGaXJlc3RvcmUgaW5pdGlhbGl6YXRpb24gZmFpbGVkOicsIGZpcmVzdG9yZUVycm9yLm1lc3NhZ2UpO1xuICAgICAgZGIgPSBudWxsO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBjb25zb2xlLndhcm4oJ0ZpcmViYXNlIGNvbmZpZ3VyYXRpb24gaW5jb21wbGV0ZSAtIHJ1bm5pbmcgaW4gZGVtbyBtb2RlJyk7XG4gIH1cbn0gY2F0Y2ggKGVycm9yKSB7XG4gIGNvbnNvbGUud2FybignRmlyZWJhc2UgaW5pdGlhbGl6YXRpb24gZmFpbGVkOicsIGVycm9yLm1lc3NhZ2UpO1xufVxuXG5leHBvcnQgeyBhdXRoLCBkYiB9O1xuZXhwb3J0IGRlZmF1bHQgYXBwO1xuIl0sIm5hbWVzIjpbImluaXRpYWxpemVBcHAiLCJnZXRBcHBzIiwiZ2V0QXV0aCIsImNvbm5lY3RBdXRoRW11bGF0b3IiLCJnZXRGaXJlc3RvcmUiLCJjb25uZWN0RmlyZXN0b3JlRW11bGF0b3IiLCJmaXJlYmFzZUNvbmZpZyIsImFwaUtleSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9BUElfS0VZIiwiYXV0aERvbWFpbiIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FVVEhfRE9NQUlOIiwicHJvamVjdElkIiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfUFJPSkVDVF9JRCIsInN0b3JhZ2VCdWNrZXQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9TVE9SQUdFX0JVQ0tFVCIsIm1lc3NhZ2luZ1NlbmRlcklkIiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfTUVTU0FHSU5HX1NFTkRFUl9JRCIsImFwcElkIiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfQVBQX0lEIiwiYXBwIiwiYXV0aCIsImRiIiwiZXhpc3RpbmdBcHBzIiwibGVuZ3RoIiwiZmlyZXN0b3JlRXJyb3IiLCJjb25zb2xlIiwid2FybiIsIm1lc3NhZ2UiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/firebase.js\n");

/***/ }),

/***/ "(api)/./lib/resource-manager.js":
/*!*********************************!*\
  !*** ./lib/resource-manager.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResourceManager: () => (/* binding */ ResourceManager)\n/* harmony export */ });\n/* harmony import */ var _daytona_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./daytona.js */ \"(api)/./lib/daytona.js\");\n/* harmony import */ var _firebase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./firebase.js */ \"(api)/./lib/firebase.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_firebase_js__WEBPACK_IMPORTED_MODULE_1__, firebase_firestore__WEBPACK_IMPORTED_MODULE_2__]);\n([_firebase_js__WEBPACK_IMPORTED_MODULE_1__, firebase_firestore__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nclass ResourceManager {\n    constructor(){\n        this.daytona = new _daytona_js__WEBPACK_IMPORTED_MODULE_0__.DaytonaService();\n    }\n    // Create complete user environment with sandbox, volumes, and API endpoints\n    async createUserEnvironment(userId, subscriptionPlan) {\n        try {\n            console.log(`Creating environment for user ${userId} with plan ${subscriptionPlan}`);\n            // Get plan limits\n            const planLimits = this.getPlanLimits(subscriptionPlan);\n            // Create sandbox with proper resources\n            const sandbox = await this.daytona.createSandbox({\n                name: `user-${userId}-env`,\n                resources: {\n                    cpu: planLimits.cpu,\n                    memory: planLimits.memory,\n                    disk: planLimits.disk\n                },\n                volumes: planLimits.volumes,\n                autoStop: planLimits.autoStop\n            });\n            // Create user resource record\n            const resourceData = {\n                userId,\n                sandboxId: sandbox.id,\n                subscriptionPlan,\n                status: \"active\",\n                createdAt: new Date(),\n                lastUsed: new Date(),\n                resources: {\n                    cpu: planLimits.cpu,\n                    memory: planLimits.memory,\n                    disk: planLimits.disk\n                },\n                usage: {\n                    apiCalls: 0,\n                    sandboxHours: 0,\n                    deployments: 0,\n                    estimatedCost: 0\n                },\n                endpoints: {\n                    sandbox: sandbox.connectionUrl,\n                    api: `https://${sandbox.id}.api.neural-weights.com`,\n                    chatbot: `https://${sandbox.id}.chat.neural-weights.com`\n                }\n            };\n            if (_firebase_js__WEBPACK_IMPORTED_MODULE_1__.db) {\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.setDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_firebase_js__WEBPACK_IMPORTED_MODULE_1__.db, \"user-resources\", userId), resourceData);\n            }\n            return resourceData;\n        } catch (error) {\n            console.error(\"Failed to create user environment:\", error);\n            throw error;\n        }\n    }\n    // Start user resources\n    async startUserResources(userId) {\n        try {\n            const userResources = await this.getUserResources(userId);\n            if (!userResources) {\n                throw new Error(\"User resources not found\");\n            }\n            // Start sandbox\n            await this.daytona.startSandbox(userResources.sandboxId);\n            // Update status\n            if (_firebase_js__WEBPACK_IMPORTED_MODULE_1__.db) {\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_firebase_js__WEBPACK_IMPORTED_MODULE_1__.db, \"user-resources\", userId), {\n                    status: \"active\",\n                    lastUsed: new Date()\n                });\n            }\n            return {\n                status: \"started\",\n                sandboxId: userResources.sandboxId\n            };\n        } catch (error) {\n            console.error(\"Failed to start user resources:\", error);\n            throw error;\n        }\n    }\n    // Stop user resources\n    async stopUserResources(userId) {\n        try {\n            const userResources = await this.getUserResources(userId);\n            if (!userResources) {\n                throw new Error(\"User resources not found\");\n            }\n            // Stop sandbox\n            await this.daytona.stopSandbox(userResources.sandboxId);\n            // Update status\n            if (_firebase_js__WEBPACK_IMPORTED_MODULE_1__.db) {\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_firebase_js__WEBPACK_IMPORTED_MODULE_1__.db, \"user-resources\", userId), {\n                    status: \"stopped\",\n                    lastUsed: new Date()\n                });\n            }\n            return {\n                status: \"stopped\",\n                sandboxId: userResources.sandboxId\n            };\n        } catch (error) {\n            console.error(\"Failed to stop user resources:\", error);\n            throw error;\n        }\n    }\n    // Deploy user API/chatbot\n    async deployUserApplication(userId, appConfig) {\n        try {\n            const userResources = await this.getUserResources(userId);\n            if (!userResources) {\n                throw new Error(\"User resources not found\");\n            }\n            // Ensure sandbox is running\n            await this.startUserResources(userId);\n            // Deploy application to sandbox\n            const deployment = await this.daytona.deployApplication(userResources.sandboxId, appConfig);\n            // Update deployment count\n            if (_firebase_js__WEBPACK_IMPORTED_MODULE_1__.db) {\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_firebase_js__WEBPACK_IMPORTED_MODULE_1__.db, \"user-resources\", userId), {\n                    \"usage.deployments\": userResources.usage.deployments + 1,\n                    lastUsed: new Date()\n                });\n            }\n            return deployment;\n        } catch (error) {\n            console.error(\"Failed to deploy user application:\", error);\n            throw error;\n        }\n    }\n    // Track usage and update billing\n    async trackUsage(userId, usageType, amount = 1) {\n        try {\n            if (!_firebase_js__WEBPACK_IMPORTED_MODULE_1__.db) return;\n            const userResources = await this.getUserResources(userId);\n            if (!userResources) return;\n            const updates = {\n                lastUsed: new Date()\n            };\n            switch(usageType){\n                case \"api_call\":\n                    updates[\"usage.apiCalls\"] = userResources.usage.apiCalls + amount;\n                    break;\n                case \"sandbox_hour\":\n                    updates[\"usage.sandboxHours\"] = userResources.usage.sandboxHours + amount;\n                    break;\n                case \"deployment\":\n                    updates[\"usage.deployments\"] = userResources.usage.deployments + amount;\n                    break;\n            }\n            // Calculate estimated cost\n            const planLimits = this.getPlanLimits(userResources.subscriptionPlan);\n            updates[\"usage.estimatedCost\"] = this.calculateCost({\n                ...userResources.usage,\n                ...updates\n            }, planLimits);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_firebase_js__WEBPACK_IMPORTED_MODULE_1__.db, \"user-resources\", userId), updates);\n        } catch (error) {\n            console.error(\"Failed to track usage:\", error);\n        }\n    }\n    // Get user resources\n    async getUserResources(userId) {\n        try {\n            if (!_firebase_js__WEBPACK_IMPORTED_MODULE_1__.db) return null;\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_firebase_js__WEBPACK_IMPORTED_MODULE_1__.db, \"user-resources\", userId);\n            const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(docRef);\n            return docSnap.exists() ? docSnap.data() : null;\n        } catch (error) {\n            console.error(\"Failed to get user resources:\", error);\n            return null;\n        }\n    }\n    // Get plan limits\n    getPlanLimits(plan) {\n        const limits = {\n            free: {\n                cpu: 1,\n                memory: 2,\n                disk: 5,\n                volumes: [],\n                autoStop: 3600,\n                apiCalls: 100,\n                deployments: 1,\n                sandboxHours: 10\n            },\n            developer: {\n                cpu: 2,\n                memory: 4,\n                disk: 10,\n                volumes: [\n                    \"gpt-20b\"\n                ],\n                autoStop: 0,\n                apiCalls: 10000,\n                deployments: 10,\n                sandboxHours: 100\n            },\n            team: {\n                cpu: 4,\n                memory: 8,\n                disk: 10,\n                volumes: [\n                    \"gpt-20b\",\n                    \"gpt-120b\"\n                ],\n                autoStop: 0,\n                apiCalls: 100000,\n                deployments: 50,\n                sandboxHours: 500\n            },\n            enterprise: {\n                cpu: 4,\n                memory: 8,\n                disk: 10,\n                volumes: [\n                    \"gpt-20b\",\n                    \"gpt-120b\"\n                ],\n                autoStop: 0,\n                apiCalls: 1000000,\n                deployments: 200,\n                sandboxHours: 2000\n            }\n        };\n        return limits[plan] || limits.free;\n    }\n    // Calculate usage cost\n    calculateCost(usage, limits) {\n        let cost = 0;\n        // API call overages\n        if (usage.apiCalls > limits.apiCalls) {\n            cost += (usage.apiCalls - limits.apiCalls) * 0.001; // $0.001 per extra call\n        }\n        // Sandbox hour overages\n        if (usage.sandboxHours > limits.sandboxHours) {\n            cost += (usage.sandboxHours - limits.sandboxHours) * 0.50; // $0.50 per extra hour\n        }\n        // Deployment overages\n        if (usage.deployments > limits.deployments) {\n            cost += (usage.deployments - limits.deployments) * 2.00; // $2.00 per extra deployment\n        }\n        return Math.round(cost * 100) / 100; // Round to 2 decimal places\n    }\n    // Clean up inactive resources\n    async cleanupInactiveResources() {\n        try {\n            if (!_firebase_js__WEBPACK_IMPORTED_MODULE_1__.db) return;\n            const cutoffTime = new Date(Date.now() - 24 * 60 * 60 * 1000); // 24 hours ago\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.collection)(_firebase_js__WEBPACK_IMPORTED_MODULE_1__.db, \"user-resources\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.where)(\"lastUsed\", \"<\", cutoffTime), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.where)(\"status\", \"==\", \"active\"));\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDocs)(q);\n            for (const docSnap of querySnapshot.docs){\n                const userId = docSnap.id;\n                const data = docSnap.data();\n                // Stop inactive free tier resources\n                if (data.subscriptionPlan === \"free\") {\n                    await this.stopUserResources(userId);\n                    console.log(`Stopped inactive free tier resources for user ${userId}`);\n                }\n            }\n        } catch (error) {\n            console.error(\"Failed to cleanup inactive resources:\", error);\n        }\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/resource-manager.js\n");

/***/ }),

/***/ "(api)/./pages/api/resources/manage.js":
/*!***************************************!*\
  !*** ./pages/api/resources/manage.js ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_resource_manager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/resource-manager.js */ \"(api)/./lib/resource-manager.js\");\n/* harmony import */ var _lib_auth_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/auth.js */ \"(api)/./lib/auth.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_resource_manager_js__WEBPACK_IMPORTED_MODULE_0__, _lib_auth_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_lib_resource_manager_js__WEBPACK_IMPORTED_MODULE_0__, _lib_auth_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst resourceManager = new _lib_resource_manager_js__WEBPACK_IMPORTED_MODULE_0__.ResourceManager();\nasync function handler(req, res) {\n    try {\n        // Verify authentication\n        const token = req.headers.authorization?.replace(\"Bearer \", \"\");\n        if (!token) {\n            return res.status(401).json({\n                error: \"Authentication required\"\n            });\n        }\n        const decodedToken = await (0,_lib_auth_js__WEBPACK_IMPORTED_MODULE_1__.verifyFirebaseToken)(token);\n        const userId = decodedToken.uid;\n        const { action } = req.body;\n        switch(action){\n            case \"create\":\n                const { subscriptionPlan } = req.body;\n                const environment = await resourceManager.createUserEnvironment(userId, subscriptionPlan);\n                return res.json({\n                    success: true,\n                    environment\n                });\n            case \"start\":\n                const startResult = await resourceManager.startUserResources(userId);\n                await resourceManager.trackUsage(userId, \"sandbox_hour\", 0.1); // Track startup\n                return res.json({\n                    success: true,\n                    result: startResult\n                });\n            case \"stop\":\n                const stopResult = await resourceManager.stopUserResources(userId);\n                return res.json({\n                    success: true,\n                    result: stopResult\n                });\n            case \"status\":\n                const resources = await resourceManager.getUserResources(userId);\n                if (!resources) {\n                    return res.status(404).json({\n                        error: \"No resources found\"\n                    });\n                }\n                // Get real-time status from Daytona\n                const sandboxStatus = await resourceManager.daytona.getSandboxStatus(resources.sandboxId);\n                return res.json({\n                    success: true,\n                    resources: {\n                        ...resources,\n                        realTimeStatus: sandboxStatus.status,\n                        uptime: sandboxStatus.uptime\n                    }\n                });\n            case \"deploy\":\n                const { appConfig } = req.body;\n                const deployment = await resourceManager.deployUserApplication(userId, appConfig);\n                await resourceManager.trackUsage(userId, \"deployment\");\n                return res.json({\n                    success: true,\n                    deployment\n                });\n            default:\n                return res.status(400).json({\n                    error: \"Invalid action\"\n                });\n        }\n    } catch (error) {\n        console.error(\"Resource management error:\", error);\n        return res.status(500).json({\n            error: error.message\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvcmVzb3VyY2VzL21hbmFnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBbUU7QUFDUjtBQUUzRCxNQUFNRSxrQkFBa0IsSUFBSUYscUVBQWVBO0FBRTVCLGVBQWVHLFFBQVFDLEdBQUcsRUFBRUMsR0FBRztJQUM1QyxJQUFJO1FBQ0Ysd0JBQXdCO1FBQ3hCLE1BQU1DLFFBQVFGLElBQUlHLE9BQU8sQ0FBQ0MsYUFBYSxFQUFFQyxRQUFRLFdBQVc7UUFDNUQsSUFBSSxDQUFDSCxPQUFPO1lBQ1YsT0FBT0QsSUFBSUssTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsT0FBTztZQUEwQjtRQUNqRTtRQUVBLE1BQU1DLGVBQWUsTUFBTVosaUVBQW1CQSxDQUFDSztRQUMvQyxNQUFNUSxTQUFTRCxhQUFhRSxHQUFHO1FBRS9CLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUdaLElBQUlhLElBQUk7UUFFM0IsT0FBUUQ7WUFDTixLQUFLO2dCQUNILE1BQU0sRUFBRUUsZ0JBQWdCLEVBQUUsR0FBR2QsSUFBSWEsSUFBSTtnQkFDckMsTUFBTUUsY0FBYyxNQUFNakIsZ0JBQWdCa0IscUJBQXFCLENBQUNOLFFBQVFJO2dCQUN4RSxPQUFPYixJQUFJTSxJQUFJLENBQUM7b0JBQUVVLFNBQVM7b0JBQU1GO2dCQUFZO1lBRS9DLEtBQUs7Z0JBQ0gsTUFBTUcsY0FBYyxNQUFNcEIsZ0JBQWdCcUIsa0JBQWtCLENBQUNUO2dCQUM3RCxNQUFNWixnQkFBZ0JzQixVQUFVLENBQUNWLFFBQVEsZ0JBQWdCLE1BQU0sZ0JBQWdCO2dCQUMvRSxPQUFPVCxJQUFJTSxJQUFJLENBQUM7b0JBQUVVLFNBQVM7b0JBQU1JLFFBQVFIO2dCQUFZO1lBRXZELEtBQUs7Z0JBQ0gsTUFBTUksYUFBYSxNQUFNeEIsZ0JBQWdCeUIsaUJBQWlCLENBQUNiO2dCQUMzRCxPQUFPVCxJQUFJTSxJQUFJLENBQUM7b0JBQUVVLFNBQVM7b0JBQU1JLFFBQVFDO2dCQUFXO1lBRXRELEtBQUs7Z0JBQ0gsTUFBTUUsWUFBWSxNQUFNMUIsZ0JBQWdCMkIsZ0JBQWdCLENBQUNmO2dCQUN6RCxJQUFJLENBQUNjLFdBQVc7b0JBQ2QsT0FBT3ZCLElBQUlLLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7d0JBQUVDLE9BQU87b0JBQXFCO2dCQUM1RDtnQkFFQSxvQ0FBb0M7Z0JBQ3BDLE1BQU1rQixnQkFBZ0IsTUFBTTVCLGdCQUFnQjZCLE9BQU8sQ0FBQ0MsZ0JBQWdCLENBQUNKLFVBQVVLLFNBQVM7Z0JBRXhGLE9BQU81QixJQUFJTSxJQUFJLENBQUM7b0JBQ2RVLFNBQVM7b0JBQ1RPLFdBQVc7d0JBQ1QsR0FBR0EsU0FBUzt3QkFDWk0sZ0JBQWdCSixjQUFjcEIsTUFBTTt3QkFDcEN5QixRQUFRTCxjQUFjSyxNQUFNO29CQUM5QjtnQkFDRjtZQUVGLEtBQUs7Z0JBQ0gsTUFBTSxFQUFFQyxTQUFTLEVBQUUsR0FBR2hDLElBQUlhLElBQUk7Z0JBQzlCLE1BQU1vQixhQUFhLE1BQU1uQyxnQkFBZ0JvQyxxQkFBcUIsQ0FBQ3hCLFFBQVFzQjtnQkFDdkUsTUFBTWxDLGdCQUFnQnNCLFVBQVUsQ0FBQ1YsUUFBUTtnQkFDekMsT0FBT1QsSUFBSU0sSUFBSSxDQUFDO29CQUFFVSxTQUFTO29CQUFNZ0I7Z0JBQVc7WUFFOUM7Z0JBQ0UsT0FBT2hDLElBQUlLLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7b0JBQUVDLE9BQU87Z0JBQWlCO1FBQzFEO0lBQ0YsRUFBRSxPQUFPQSxPQUFPO1FBQ2QyQixRQUFRM0IsS0FBSyxDQUFDLDhCQUE4QkE7UUFDNUMsT0FBT1AsSUFBSUssTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFQyxPQUFPQSxNQUFNNEIsT0FBTztRQUFDO0lBQ3JEO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXVyYWwtd2VpZ2h0cy1odWIvLi9wYWdlcy9hcGkvcmVzb3VyY2VzL21hbmFnZS5qcz8xZGQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlc291cmNlTWFuYWdlciB9IGZyb20gJy4uLy4uLy4uL2xpYi9yZXNvdXJjZS1tYW5hZ2VyLmpzJztcbmltcG9ydCB7IHZlcmlmeUZpcmViYXNlVG9rZW4gfSBmcm9tICcuLi8uLi8uLi9saWIvYXV0aC5qcyc7XG5cbmNvbnN0IHJlc291cmNlTWFuYWdlciA9IG5ldyBSZXNvdXJjZU1hbmFnZXIoKTtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICB0cnkge1xuICAgIC8vIFZlcmlmeSBhdXRoZW50aWNhdGlvblxuICAgIGNvbnN0IHRva2VuID0gcmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbj8ucmVwbGFjZSgnQmVhcmVyICcsICcnKTtcbiAgICBpZiAoIXRva2VuKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBlcnJvcjogJ0F1dGhlbnRpY2F0aW9uIHJlcXVpcmVkJyB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBkZWNvZGVkVG9rZW4gPSBhd2FpdCB2ZXJpZnlGaXJlYmFzZVRva2VuKHRva2VuKTtcbiAgICBjb25zdCB1c2VySWQgPSBkZWNvZGVkVG9rZW4udWlkO1xuXG4gICAgY29uc3QgeyBhY3Rpb24gfSA9IHJlcS5ib2R5O1xuXG4gICAgc3dpdGNoIChhY3Rpb24pIHtcbiAgICAgIGNhc2UgJ2NyZWF0ZSc6XG4gICAgICAgIGNvbnN0IHsgc3Vic2NyaXB0aW9uUGxhbiB9ID0gcmVxLmJvZHk7XG4gICAgICAgIGNvbnN0IGVudmlyb25tZW50ID0gYXdhaXQgcmVzb3VyY2VNYW5hZ2VyLmNyZWF0ZVVzZXJFbnZpcm9ubWVudCh1c2VySWQsIHN1YnNjcmlwdGlvblBsYW4pO1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiB0cnVlLCBlbnZpcm9ubWVudCB9KTtcblxuICAgICAgY2FzZSAnc3RhcnQnOlxuICAgICAgICBjb25zdCBzdGFydFJlc3VsdCA9IGF3YWl0IHJlc291cmNlTWFuYWdlci5zdGFydFVzZXJSZXNvdXJjZXModXNlcklkKTtcbiAgICAgICAgYXdhaXQgcmVzb3VyY2VNYW5hZ2VyLnRyYWNrVXNhZ2UodXNlcklkLCAnc2FuZGJveF9ob3VyJywgMC4xKTsgLy8gVHJhY2sgc3RhcnR1cFxuICAgICAgICByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiB0cnVlLCByZXN1bHQ6IHN0YXJ0UmVzdWx0IH0pO1xuXG4gICAgICBjYXNlICdzdG9wJzpcbiAgICAgICAgY29uc3Qgc3RvcFJlc3VsdCA9IGF3YWl0IHJlc291cmNlTWFuYWdlci5zdG9wVXNlclJlc291cmNlcyh1c2VySWQpO1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiB0cnVlLCByZXN1bHQ6IHN0b3BSZXN1bHQgfSk7XG5cbiAgICAgIGNhc2UgJ3N0YXR1cyc6XG4gICAgICAgIGNvbnN0IHJlc291cmNlcyA9IGF3YWl0IHJlc291cmNlTWFuYWdlci5nZXRVc2VyUmVzb3VyY2VzKHVzZXJJZCk7XG4gICAgICAgIGlmICghcmVzb3VyY2VzKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgZXJyb3I6ICdObyByZXNvdXJjZXMgZm91bmQnIH0pO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBHZXQgcmVhbC10aW1lIHN0YXR1cyBmcm9tIERheXRvbmFcbiAgICAgICAgY29uc3Qgc2FuZGJveFN0YXR1cyA9IGF3YWl0IHJlc291cmNlTWFuYWdlci5kYXl0b25hLmdldFNhbmRib3hTdGF0dXMocmVzb3VyY2VzLnNhbmRib3hJZCk7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gcmVzLmpzb24oe1xuICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgcmVzb3VyY2VzOiB7XG4gICAgICAgICAgICAuLi5yZXNvdXJjZXMsXG4gICAgICAgICAgICByZWFsVGltZVN0YXR1czogc2FuZGJveFN0YXR1cy5zdGF0dXMsXG4gICAgICAgICAgICB1cHRpbWU6IHNhbmRib3hTdGF0dXMudXB0aW1lXG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgY2FzZSAnZGVwbG95JzpcbiAgICAgICAgY29uc3QgeyBhcHBDb25maWcgfSA9IHJlcS5ib2R5O1xuICAgICAgICBjb25zdCBkZXBsb3ltZW50ID0gYXdhaXQgcmVzb3VyY2VNYW5hZ2VyLmRlcGxveVVzZXJBcHBsaWNhdGlvbih1c2VySWQsIGFwcENvbmZpZyk7XG4gICAgICAgIGF3YWl0IHJlc291cmNlTWFuYWdlci50cmFja1VzYWdlKHVzZXJJZCwgJ2RlcGxveW1lbnQnKTtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgc3VjY2VzczogdHJ1ZSwgZGVwbG95bWVudCB9KTtcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdJbnZhbGlkIGFjdGlvbicgfSk7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1Jlc291cmNlIG1hbmFnZW1lbnQgZXJyb3I6JywgZXJyb3IpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pO1xuICB9XG59XG4iXSwibmFtZXMiOlsiUmVzb3VyY2VNYW5hZ2VyIiwidmVyaWZ5RmlyZWJhc2VUb2tlbiIsInJlc291cmNlTWFuYWdlciIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJ0b2tlbiIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwicmVwbGFjZSIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsImRlY29kZWRUb2tlbiIsInVzZXJJZCIsInVpZCIsImFjdGlvbiIsImJvZHkiLCJzdWJzY3JpcHRpb25QbGFuIiwiZW52aXJvbm1lbnQiLCJjcmVhdGVVc2VyRW52aXJvbm1lbnQiLCJzdWNjZXNzIiwic3RhcnRSZXN1bHQiLCJzdGFydFVzZXJSZXNvdXJjZXMiLCJ0cmFja1VzYWdlIiwicmVzdWx0Iiwic3RvcFJlc3VsdCIsInN0b3BVc2VyUmVzb3VyY2VzIiwicmVzb3VyY2VzIiwiZ2V0VXNlclJlc291cmNlcyIsInNhbmRib3hTdGF0dXMiLCJkYXl0b25hIiwiZ2V0U2FuZGJveFN0YXR1cyIsInNhbmRib3hJZCIsInJlYWxUaW1lU3RhdHVzIiwidXB0aW1lIiwiYXBwQ29uZmlnIiwiZGVwbG95bWVudCIsImRlcGxveVVzZXJBcHBsaWNhdGlvbiIsImNvbnNvbGUiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/resources/manage.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fresources%2Fmanage&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cresources%5Cmanage.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();